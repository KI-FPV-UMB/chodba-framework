TODO
****
-pomale vymienanie appiek
-gallery prerobit na novy sdl skel
-gallery pada
-news ostavaju vysiet

-do readme doplnit instalaciu python3-paho-mqtt
-farebne schemy - ten zoznam farieb nebude napevno v aplikacii, ale bude sa rozposielat centralne - vsetky appky tak budu moct byt v rovnakej scheme
-galeriu skusit spravit tkinter verziu; aj s videami
 problem: Záverečné práce/Michal Brozman - Vyuzitie kniznice OMPL - trasa.png
-dokumentaciu updatnut; dorobit. ake spravy poslat na tie bezne veci (spustenie, vypnutie). spisat ako to startuje
 vsetko si pripomenut a v ramci toho to spisat
-wiki: zhrnut podmienky na appku (na ake spravy ma ako reagovat); quickstart ze ako to cele rozchodit aj detailne opisat vsetky "sluzby" - s prikladmi sprav

-ukladat dake statistiky (db backend) - ktora aplikacia sa ako casto spustila, ako dlho s nou niekto robil, ...
 potom na mobile, ked sa bude nieco spustat, tak defaultne to bude triedit podla oblubenosti
 dako tak to organizovat, ze aj po rokoch. cize napr. ak kazdy rok budu ziaci robit na grafike arkanoid, tak v zozname to bude ako
 arkanoid '19 (ale zotriedene podla popularity). cize vsetky arkanoidy
-citlive miesto: ked sa prave vypina aplikacia s spusta nova; ak do toho niekto (user) spusti aplikaciu, tak sa neaktivuje ten sposob
 nahradenia aplikacie. vysledkom bude, ze budu naraz 2 frontend aplikacie. mozno to spravit tak, ze v tej kontrole na pozadi stale aj
 zistovat, ci aj napriek vsetkemu nie su na 1 uzle naraz 2 frontend aplikacie - ak ano, tak jednu zrusit (tu, ktora nie je user app - t.j.
 ta s nickom). tato kontrola sa moze robit aj relativne casto (kazdych par sekund); nemala by byt draha


TEMY
****
1) top priority
-rozvrh-prestavky [backend] - sleduje cas, a vzdy cez prestavku vysle signal na spustenie rozvrh-teraz
-rozvrh-teraz [frontend] - zobrazi co sa prave kde uci, + co bude najblizsie kde nasledovat (asi podla ucebni)
-rozvrh-cely [frontend] - zobrazi cely rozvrh. user by mal v mobile mat nastavenu aj aprobaciu, tak mu zobrazi len tu
	https://www.pdf.umb.sk/~rozvrh/Rozvrhy/2020-21%20ZS/rozvrh.html
	view-source:https://www.pdf.umb.sk/~rozvrh/Rozvrhy/2020-21%20ZS/rozvrh_Trieda_Menu.html
	https://www.pdf.umb.sk/~rozvrh/Rozvrhy/2020-21%20ZS/rozvrh_Trieda_1nAIN.html
		rozvrh_Trieda_2nAIN.html
		rozvrh_Trieda_3nAIN.html
-do galerie dorobit prehravanie videa; dohrat tam videa
-qr kod pre mobilnu appku [frontend] - aj taka reklama: "Skus to!" a qr kod
-oznamy z webu ki
	http://www.fpv.umb.sk/rss/katedry-katedra-informatiky.xml
	https://www.tutorialspoint.com/python_text_processing/python_reading_rss_feed.htm
	rss
2) meet-and-code
-hra2d (java aj python) - aby to islo ako ma
-status [frontend] - ake su aplikacie, ake workspaces; teplotu kazdeho rpi
-srandovne oznamy - "Uc sa!", "Mas spravenu ulohu?", ... -> pricom by som vedel zdetegovat, ze sa na chodbe zjavil dav; a podla rozvrhu by som vedel,
 ze o akych studentov ide (komu prave skoncila hodina); a podla toho cielit: "Mas vypracovane zadanie <nazov_z_moodle>?"
-oznamy [frontend] - info aj spolocne (ked sa to spusti len automaticky), ale aj podla aprobacie (ked to niekto spusti mobilom)
-zaznamenanie hry hraca (potom mozne pouzit na demo ukazku - spusti sa normalne hra, ale ina appka jej bude posielat klavesy ako ich ma zaznamenane)
	alebo aj nahodne klavesy (ake - to vie vdaka layoutu)
-teplomer-range [backend] - prijima spravy s nameranou teplotou; ak klesne/stupne cez daku hodnotu, tak spusti teplomer-alert
-teplomer-alert [frontend] - zobrazi (vtipnu?) spravu, ze teplota je prilis vysoka/nizka
-obedy-dnes [frontend] - zobrazi len, ze co je dnes na obed
-obedy-tyzden [frontend] - zobrazi obedy na cely tyzden
	aj z ikm, ...
-parkovanie
-mhd-teraz [frontend] - zobrazi, co ide najblizsich N minut (od skoly, ale aj od tajaku)
-mhd-cely [frontend] - celkovy prehlad co/kedy ide
-pridat do ucebni senzory (vlhkost, teplota, pohybovy) a sledovat vyuzitie ucebni
-hra-... [frontend] - ovladanie musi reagovat na mqtt spravy
	jackbox: https://www.youtube.com/watch?v=UZfNc_kbxKQ
	dyna blaster (vsetci hraci na jednej obrazovke)
	spy vs spy (kazdy hrac na svojej obrazovke)
	najlepsie studentske hry prerobit
-firmy [frontend] - reklama, oznamy ze niekoho hladaju, ...

-pripravit priklad TkInter frontendu. bude podporovat 2 mody: 1 obrazovkova / viac obrazovkova. pricom sama oznami, kolko obrazoviek v tom
	multi mode vyzaduje (0=nepodporuje) podla toho by na tych 8 monitoroch mohlo ist naraz niekolko viac-obrazovkovych aplikacii
	(napr. 3 a 5, alebo 3 a 3 a 2, a pod.)
-moznost pustenia rezimu streamovania videa. to by mala mat appka pod kontrolou; resp. spravit appku, ktora pusti stream a bude zobrazovat jeho patricne casti na prislusnej obrazovke. pricom nemusi byt zrovna na vsetkych 8.  omxplayer --crop '0 0 320 347' http://192.168.0.20:8080
-farebne ovladatelne svetla
-automaticke otvaranie okna von
-detekcia otvorenych dveri na ucebnu
-polievanie kvetu, fontanka???
-home automation (milan!)
-mysliet na nase temy (pv, robotika, vysokovykonne pocitanie, iot, ...)
-rozvrh: https://ws-gw.umb.sk/doc


3) bc/mgr prace
-osoba-poloha [backend] - posle spravu, ze na definovanej pozicii (napr. pred kazdym monitorom) stoji nejaka osoba
-osoba-gesto [backend] - posle spravu, ze nejaka osoba spravila na kinect nejake gesto
-osoby-pozicie [backend] - ked pride sprava (poziadavka) tak zisti kde ktora osoba stoji a posle to inou spravou
-osoby-zapcha [backend] - dotazuje sa na pocty ludi a zaznamenava to do db. po dlhsom case bude vediet, kedy tam byva plno. potom bude dopredu
 vysielat spravu, ze sa blizi zapcha
-osoby-zapcha-alert [frontend] - zobrazi varovanie, ze bude plno...
-hlasove-ovladanie [backend?] - pocuvanie hovorenych povelov (pomocou google sluzby)


FRAMEWORK
*********
-technologie na zvazenie (ROS 2.0):
	-databaza: https://redis.io/
	-messaging: https://zeromq.org/
	-vymena dat: https://en.wikipedia.org/wiki/Data_Distribution_Service
	-konfiguracia siete: https://en.wikipedia.org/wiki/Zero-configuration_networking
-moznost instalovania dalsich apiek studentami (brat to rovno s gitu?)


MOBIL
*****
-instalovana pomocou qr kodu
-vzdy musi poslat aj dake svoje id (povedzme ze v appke si kazdy vyplni nick); aby bolo mozne rozlisit viac hracov
-tiez by si mal mat moznost nastavit aprobaciu (napr. pre rozvrh, ale aj pre oznamy a pod.)
-musi informovat (rovno umoznit?), ze ked chce user s tym pracovat, musi sa prihlasit na lokalnu rpi wifi
-ovladacie tlacidla asi kreslit graficky
-na tom ovladacom screene aj dake tlacidlo na restart
-spustanie aplikacie by malo byt asi na predposlednom screene, nie na tom ovladacom. lebo ked sa uspi a zobudi mobil, tak sa to spusti znova
 (aj sprava na spustenie appky)
 tym padom tu pracu s mqtt treba dako vynat do novej triedy; mozno ako staticke metody
-prvy screen preusporiadat nanovo - lebo teraz sa to zle formatuje, ked sa to nezmesti
-pri dynamickom ovladani sa pri kazdom odoslani vyziada novy layout (aby bolo mozne podla potreby menit formular)


INSTALACIA A KONFIGURACIA
*************************
-TODO
	-dorobit rpi hw: kameru https://www.makexyz.com/3d-models/order/f3677c995f2832e1a5c7413595707bbc
-na vsetkych (master aj nodes)
	sudo apt-get install python3-pip python3-paho-mqtt libsdl2-2.0-0 libsdl2-image-2.0-0 libsdl2-ttf-2.0-0 python3-pil.imagetk fortunes-cs python3-numpy python3-matplotlib fonts-freefont-ttf
	sudo pip3 install pysdl2
	sudo cp /opt/chodba-framework/system/scripts/usr/share/xsessions/sleep-inf.desktop /usr/share/xsessions/
	sudo chown root:root /usr/share/xsessions/sleep-inf.desktop
	sudo vi /etc/lightdm/lightdm.conf
		autologin-session=sleep-inf
	sudo mkdir /var/log/chodba/
	sudo cp /opt/chodba-framework/system/scripts/etc/systemd/system/chodba-node_manager.service /etc/systemd/system/
	sudo systemctl enable chodba-node_manager.service 
	sudo vi /etc/crontab
		0 7 * * 1-5	root	/opt/chodba-framework/system/scripts/usr/local/bin/hdmi-ctrl.sh on
		0 20 * * 1-5	root	/opt/chodba-framework/system/scripts/usr/local/bin/hdmi-ctrl.sh off
	# len na uzly
	sudo vi /etc/fstab
		192.168.0.1:/home       /home   nfs     _netdev,vers=3,auto     0 0
		192.168.0.1:/opt/chodba-framework       /opt/chodba-framework   nfs     _netdev,vers=3,auto     0 0

-master
	sudo vi /etc/network/interfaces
		source-directory /etc/network/interfaces.d

		auto br0 eth0 wlan0 eth1
		allow-hotplug wlan0

		iface eth0 inet manual
		iface wlan0 inet manual

		iface br0 inet static
			bridge_ports eth0 wlan0
			address 192.168.0.1
			broadcast 192.168.0.255
			netmask 255.255.255.0

		iface eth1 inet dhcp

	apt-get install mosquitto		# libcjson1 libdlt2 libmosquitto1 libwebsockets16 mosquitto
	sudo vi /etc/mosquitto/mosquitto.conf
		pid_file /var/run/mosquitto.pid

		persistence true
		persistence_location /var/lib/mosquitto/

		log_dest file /var/log/mosquitto/mosquitto.log

		include_dir /etc/mosquitto/conf.d

		listener 1883
		protocol mqtt

		listener 9001
		protocol websockets

	-spustit mqtt (mosquitto)
	-pripojit ethernetom na internet, wifi nastavit ako AP (ale neroutovat!)
	-nainstalovat OpenCV, nastavit kameru
	-pripojit a nastavit senzor teploty a vlhkosti, mikrofon
	-povolit sluzby
		systemctl enable chodba-master.service
	-na hlavnom uzle cronom opakovane posielat mastrovi spravu run_backends

	sudo vi /etc/crontab
		*/2 * * * *	root	/opt/chodba-framework/system/scripts/usr/local/bin/chodba.sh
		*/2 * * * *	pi	/opt/chodba-framework/system/scripts/usr/local/bin/git-pull.sh
		*/10 * * * *	pi	/opt/chodba-framework/system/scripts/usr/local/bin/stat2io.sh
	sudo vi /etc/exports
		/home                   192.168.0.0/25(rw,crossmnt,no_subtree_check,async)
		/opt/chodba-framework   192.168.0.0/25(rw,crossmnt,no_subtree_check,async)


export DISPLAY=:0.0 ; xset s off ; xset -display :0.0 -dpms ; xset -display :0.0 s off ; xset -display :0.0 s noblank ; export PYTHONPATH=/opt/chodba-framework/base


ssh pi@194.160.41.39 -p 1194
ssh pi@194.160.41.64 -p 1194
ssh pi@194.160.41.90 -p 1194


gdb python <pid>
	py-bt
	py-list
	py-locals

pip3 install pyrasite

pyrasite-shell 12345

import sys, traceback
for thread_id, frame in sys._current_frames().items():
    print('Stack for thread {}'.format(thread_id))
    traceback.print_stack(frame)
    print('')

