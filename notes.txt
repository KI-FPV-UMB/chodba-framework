
TODO:
	upravit hra2d-java, aby splnalo podmienky na appku. klavesnica-java sa zrusi, ked bude mobil
	databaza backend (napr. na ukladanie skore)
	status frontend (ake su aplikacie, ake workspaces); teplotu kazdeho rpi
	do dokumentu zhrnut podmienky na appku (na ake spravy ma ako reagovat)
	na gitlab spravit dokument, kde opisem ako to cele rozchodit (aby si to mohol napr. aj Martin odskusat)
	pripravit priklad TkInter frontendu. bude podporovat 2 mody: 1 obrazovkova / viac obrazovkova. pricom sama oznami, kolko obrazoviek v tom
		multi mode vyzaduje (0=nepodporuje) podla toho by na tych 8 monitoroch mohlo ist naraz niekolko viac-obrazovkovych aplikacii
		(napr. 3 a 5, alebo 3 a 3 a 2, a pod.)
	asi tie najlepsie studentske hry upravit do tohto prostredia
	master by mohol ukladat (pomocou db backendu) aj dake statistiky - ktora aplikacia sa ako casto spustila, ako dlho s nou niekto robil, ...
	spravit sluzbu na spustanie master/node_manager; a to tak aby sa to pustilo po spusteni mosquitto. node_manager spustat cronom
	pri dynamickom ovladani sa pri kazdom odoslani vyziada novy layout (aby bolo mozne podla potreby menit formular)
	demo spustenie a nahodne hranie aplikacie - normalne spustim appku, ale okrem toho sa este spusti dalsia backend appka, ktora bude nahodne
		generovat stlacene klavesy (ake - to viem vdaka layoutu)


TEMY
rozvrh, obdy, mhd - data citaju z db. tam sa to bude plnit skriptami (tiez moznost robit na mac), alebo rucne
1) top priority
-?databaza [backend] - na zaklade danej spravy zapise udaj do db (asi key/value pary, ale pri kazdom aj zdroj - ze kto to poslal)
-qr kod pre mobilnu appku [frontend]
-daky python frontend ukazku (tkinter)
2) meet-and-code
-oznamy [frontend] - info aj spolocne (ked sa to spusti len automaticky), ale aj podla aprobacie (ked to niekto spusti mobilom)
-teplomer [backend] - posle nameranu teplotu kazdych n minut
-teplomer-range [backend] - prijima spravy s nameranou teplotou; ak klesne/stupne cez daku hodnotu, tak spusti teplomer-alert
-teplomer-alert [frontend] - zobrazi (vtipnu?) spravu, ze teplota je prilis vysoka/nizka
-rozvrh-prestavky [backend] - sleduje cas, a vzdy cez prestavku vysle signal na spustenie rozvrh-teraz
-rozvrh-teraz [frontend] - zobrazi co sa prave kde uci, + co bude najblizsie kde nasledovat (asi podla ucebni)
-rozvrh-cely [frontend] - zobrazi cely rozvrh. user by mal v mobile mat nastavenu aj aprobaciu, tak mu zobrazi len tu
-obedy-dnes [frontend] - zobrazi len, ze co je dnes na obed
-obedy-tyzden [frontend] - zobrazi obedy na cely tyzden
-mhd-teraz [frontend] - zobrazi, co ide najblizsich N minut (od skoly, ale aj od tajaku)
-mhd-cely [frontend] - celkovy prehlad co/kedy ide
-hra-... [frontend] - ovladanie musi reagovat na mqtt spravy
	jackbox: https://www.youtube.com/watch?v=UZfNc_kbxKQ
	dyna blaster (vsetci hraci na jednej obrazovke)
	spy vs spy (kazdy hrac na svojej obrazovke)
-firmy [frontend] - reklama, oznamy ze niekoho hladaju, ...
-galeria [frontend]
3) bc/mgr prace
-osoba-poloha [backend] - posle spravu, ze na definovanej pozicii (napr. pred kazdym monitorom) stoji nejaka osoba
-osoba-gesto [backend] - posle spravu, ze nejaka osoba spravila na kinect nejake gesto
-osoby-pozicie [backend] - ked pride sprava (poziadavka) tak zisti kde ktora osoba stoji a posle to inou spravou
-osoby-zapcha [backend] - dotazuje sa na pocty ludi a zaznamenava to do db. po dlhsom case bude vediet, kedy tam byva plno. potom bude dopredu
 vysielat spravu, ze sa blizi zapcha
-osoby-zapcha-alert [frontend] - zobrazi varovanie, ze bude plno...
-pocuvanie hovorenych povelov (pomocou google sluzby)


FRAMEWORK
-rpi4:
	-nainstalovat a spustit mqtt (mosquitto)
	-pripojit ethernetom na internet, wifi nastavit ako AP (ale neroutovat!)
	-nainstalovat OpenCV, nastavit kameru
	-pripojit a nastavit senzor teploty a vlhkosti, mikrofon
	-pri starte:
		-na hlavnom uzle spustit app master
		-na vsetkych spustit node_manager
		-na hlavnom uzle cronom opakovane posielat mastrovi spravu run_backends
-mobilna appka, ktora zobrazi daky predefinovany screen
	-posielanie sprav ovladania (dola/doprava/...)
	-posielanie sprav na spustenie frontend appky (zoznam dostane zo servera!)
	-instalovana pomocou qr kodu
	-vzdy musi poslat aj dake svoje id (povedzme ze v appke si kazdy vyplni nick); aby bolo mozne rozlisit viac hracov
	-tiez by si mal mat moznost nastavit aprobaciu (napr. pre rozvrh, ale aj pre oznamy a pod.)
	-musi informovat (rovno umoznit?), ze ked chce user s tym pracovat, musi sa prihlasit na lokalnu rpi wifi
-moznost instalovania dalsich apiek studentami (brat to rovno s gitu?)



TODO
-moznost pustenia rezimu streamovania videa. to by mala mat appka pod kontrolou; resp. spravit appku, ktora pusti stream a bude zobrazovat jeho patricne casti na prislusnej obrazovke. pricom nemusi byt zrovna na vsetkych 8.  omxplayer --crop '0 0 320 347' http://192.168.0.20:8080
-farebne ovladatelne svetla
-automaticke otvaranie okna von
-detekcia otvorenych dveri na ucebnu
-polievanie kvetu, fontanka???
-home automation (milan!)
-mysliet na nase temy (pv, robotika, vysokovykonne pocitanie, iot, ...)
-docker??


